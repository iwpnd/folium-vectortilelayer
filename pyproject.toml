[tool.poetry]
name = "folium-vectortilelayer"
version = "0.2.3"
description = "VectorTileLayer plugin for folium"
authors = ["Benjamin Ramser <iwpdn@posteo.de>"]
readme = "readme.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
folium = "^0.16.0"

[tool.poetry.group.dev.dependencies]
gitlint = ">=0.18,<0.20"
pytest = "^8.1.1"
pre-commit = "^3.6.2"
black = "^24.2.0"
poethepoet = "^0.25.0"
isort = "^5.12.0"
pytest-cov = "^4.0.0"
ruff = "^0.3.2"
python-semantic-release = "^9.1.1"

[tool.ruff]
line-length = 88

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variables = [
    "folium_vectortilelayer/__init__.py:__version__",
    "pyproject.toml:version",
]
commit_subject = "ci: release v{version}"
branch = "main"
upload_to_release = true
build_command = "pip install poetry --upgrade && poetry build"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
    "chore-deps",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "chore-deps"]

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore\\(release\\):",
  "chore\\(deps-dev\\):",
  "build\\(deps-dev\\):",
  "ci:",
]


[tool.poe.tasks]
test       = "poetry run pytest -vv -s tests/"
test-cov   = "poetry run pytest -vv -s --cov=folium_vectortilelayer tests/"
lint       = "ruff ."
